name: Keep Alive

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:  # Manual trigger

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ping Keep-Alive Endpoint
        run: |
          # Get the domain from environment or use a default
          DOMAIN="${NETLIFY_DOMAIN:-blutech18.netlify.app}"
          
          echo "Pinging keep-alive endpoint: https://$DOMAIN/.netlify/functions/keep-alive"
          
          # Ping the keep-alive endpoint
          RESPONSE=$(curl -s -w "\\nHTTP_CODE:%{http_code}\\nTIME:%{time_total}" \
            "https://$DOMAIN/.netlify/functions/keep-alive")
          
          # Extract response body and status code
          BODY=$(echo "$RESPONSE" | head -n -2)
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          TIME=$(echo "$RESPONSE" | grep "TIME:" | cut -d: -f2)
          
          echo "Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"
          echo "Response Time: ${TIME}s"
          
          # Check if the request was successful
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Keep-alive ping successful"
          else
            echo "❌ Keep-alive ping failed with HTTP code: $HTTP_CODE"
            exit 1
          fi
          
          echo "Keep-alive ping sent at $(date)"

      - name: Health Check
        run: |
          # Get the domain from environment or use a default
          DOMAIN="${NETLIFY_DOMAIN:-blutech18.netlify.app}"
          
          echo "Performing health check: https://$DOMAIN/.netlify/functions/health"
          
          # Perform health check
          RESPONSE=$(curl -s -w "\\nHTTP_CODE:%{http_code}\\nTIME:%{time_total}" \
            "https://$DOMAIN/.netlify/functions/health")
          
          # Extract response body and status code
          BODY=$(echo "$RESPONSE" | head -n -2)
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          TIME=$(echo "$RESPONSE" | grep "TIME:" | cut -d: -f2)
          
          echo "Health Check Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"
          echo "Response Time: ${TIME}s"
          
          # Check if the health check was successful
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Health check passed"
          else
            echo "❌ Health check failed with HTTP code: $HTTP_CODE"
            exit 1
          fi

      # Optional: Slack notification on failure
      # To enable: Add SLACK_WEBHOOK_URL secret in your repository settings
      # Go to: Settings > Secrets and variables > Actions > New repository secret
      - name: Notify on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#alerts'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true

  # Optional: Database connectivity test
  db-test:
    runs-on: ubuntu-latest
    needs: keep-alive
    if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Test database connectivity
        run: |
          # This would require setting up environment variables
          # and running a simple database connectivity test
          echo "Database connectivity test would run here"
          echo "You can add actual database tests if needed"
